
name: $(date:yyyymmdd)$(rev:.rr) #20191209.00

trigger:
  - master

stages:
  - stage: compile
    jobs:
      - job: aspnet
        pool:
          vmImage: ubuntu-18.04
        steps:
          - script: |
              dotnet build 03_devops/Devops.sln

  - stage: test
    jobs:
      - job: aspnet_test
        pool:
          vmImage: ubuntu-18.04
        steps:
          - task: DotNetCoreCLI@2
            inputs:
              command: test
              projects: '03_devops/Devops.sln'
              arguments: '--collect:"XPlat Code Coverage"'
          - task: PublishCodeCoverageResults@1
            inputs:
              codeCoverageTool: cobertura
              summaryFileLocation: './03_devops/Devops.Test/TestResults/coverage.cobertura.xml'
  - stage: analyze
    jobs:
      - job:
        pool:
          vmImage: ubuntu-18.04
        steps:
          - task: UseDotNet@2
              inputs:
                packageType: 'sdk'
                version: '3.1.100'
          - script: dotnet tool install --global dotnet-sonarscanner
          - script: |
              dotnet sonarscanner begin /k:devops-tyler /d:sonar-login=$SONAR_TOKEN /o:gilbyscarchest
              dotnet build 03_devops/Devops.sln
              dotnet test 03_devops/Devops.sln
              dotnet sonarscanner end /d:sonar-login=$SONAR_TOKEN
            env:
              SONAR_TOKEN: $(SONAR_LOGIN)
  - stage: pack
    jobs:
      - job:
        pool:
          vmImage: ubuntu-18.04
        steps:
          - script: docker image build -f 03_devops/dockerfile -t gilbyscarchest01/devops:$BUILD_NAME
            env:
              BUILD_NAME: $(Build.DefinitionName)
          - script: docker login -username $DOCKER_USERNAME --password $DOCKER_TOKEN
            env:
              DOCKER_TOKEN: $(DOCKER_TOKEN)
              DOCKER_USERNAME: $(DOCKER_USER)
          - script: docker image push gilbyscarchest01/devops:$BUILD_NAME
            env:
              BUILD_NAME: $(Build.DefinitionName)